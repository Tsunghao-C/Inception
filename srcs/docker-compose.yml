networks:
  inception-network:
    driver: bridge

volumes:
  wordpress_data:
    driver: local
    driver_opts:
      type: none
      device: ${HOME}/data/wordpress_data
      o: bind
  mariadb_data:
    driver: local
    driver_opts:
      type: none
      device: ${HOME}/data/mariadb_data
      o: bind
  prometheus_data:
    driver: local
    driver_opts:
      type: none
      device: ${HOME}/data/monitoring_data/prometheus
      o: bind
  grafana_data:
    driver: local
    driver_opts:
      type: none
      device: ${HOME}/data/monitoring_data/grafana
      o: bind

services:
  nginx:
    container_name: nginx
    build:
      context: ./requirements/nginx
      dockerfile: Dockerfile
    init: true
    ports:
      - "443:443"
    networks:
      - inception-network
    volumes:
      - wordpress_data:/var/www/html
    depends_on:
      - wordpress
      - static-website
      - adminer
      - prometheus
      - grafana
    pull_policy: never
    restart: unless-stopped

  wordpress:
    container_name: wordpress
    build:
      context: ./requirements/wordpress
      dockerfile: Dockerfile
    init: true
    env_file:
      - .env
    networks:
      - inception-network
    volumes:
      - wordpress_data:/var/www/html
    depends_on:
      - mariadb
      - redis
    pull_policy: never
    restart: unless-stopped

  mariadb:
    container_name: mariadb
    build:
      context: ./requirements/mariadb
      dockerfile: Dockerfile
    init: true
    env_file:
      - .env
    networks:
      - inception-network
    volumes:
      - mariadb_data:/var/lib/mysql
    pull_policy: never
    restart: unless-stopped
  
  redis:
    container_name: redis
    build:
      context: ./requirements/bonus/redis
      dockerfile: Dockerfile
    init: true
    env_file:
      - .env
    networks:
      - inception-network
    pull_policy: never
    restart: unless-stopped
  
  ftp-server:
    container_name: ftp-server
    build:
      context: ./requirements/bonus/ftp_server
      dockerfile: Dockerfile
    init: true
    env_file:
      - .env
    networks:
      - inception-network
    volumes:
      - wordpress_data:/var/www/html
    ports:
      - "20-21:20-21"
      - "30000-30100:30000-30100"
    pull_policy: never
    restart: unless-stopped

  static-website:
    container_name: static-website
    build:
      context: ./requirements/bonus/static_website
      dockerfile: Dockerfile
    init: true
    networks:
      - inception-network
    volumes:
      - wordpress_data:/var/www/html
    pull_policy: never
    restart: on-failure:2

  adminer:
    container_name: adminer
    build:
      context: ./requirements/bonus/adminer
      dockerfile: Dockerfile
    init: true
    networks:
      - inception-network
    depends_on:
      - mariadb
    pull_policy: never
    volumes:
      - wordpress_data:/var/www/html
    restart: unless-stopped
  
  prometheus:
    container_name: prometheus
    build:
      context: ./requirements/bonus/prometheus
      dockerfile: Dockerfile
    networks:
      - inception-network
    depends_on:
      - mariadb
      - redis
    env_file:
      - .env
    volumes:
      # - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    pull_policy: never
    restart: unless-stopped

  grafana:
    container_name: grafana
    build:
      context: ./requirements/bonus/grafana
      dockerfile: Dockerfile
    networks:
      - inception-network
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    env_file:
      - .env
    volumes:
      - grafana_data:/var/lib/grafana
    pull_policy: never
    restart: unless-stopped
  
  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    networks:
      - inception-network
    expose:
      - "9100"
    restart: unless-stopped
  
## init: true will create a docker/init service as PID 1 to proper reaping zombie processes and forwarding signals.
## since the services used in this project don't spawn children processes and even has process management capability, we don't need to add init:true here.